// Nodes in a graph are split into two disjoint subsets: V1 and V2
// An edge between nodes of the disjoint subsets is denoted by edge(node from V1, node from V2)
.decl edge(v1:symbol, v2:symbol)
.input edge
// Matching constraints ensures no two edges share an endpoint (i.e. the bipartite matching problem)
.decl matching(v1:symbol, v2:symbol) keys v1, v2
.decl notBipartiteMatching()

matching(x,y) :- edge(x,y).

// Not to edges share an endpoint.
notBipartiteMatching() :- matching(x, y), matching(x, z), z != y.
notBipartiteMatching() :- matching(y, x), matching(z, x), z != y.

.printsize notBipartiteMatching
